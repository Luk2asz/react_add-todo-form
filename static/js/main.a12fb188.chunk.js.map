{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","formSubmitted","setFormSubmitted","updatedTodos","setUpdatedTodos","action","onSubmit","event","preventDefault","newTodo","Math","max","Number","method","htmlFor","type","placeholder","value","onChange","target","String","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a12fb188.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/index';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import { Todo } from '../../types/index';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={todo.completed\n      ? 'TodoInfo TodoInfo--completed'\n      : 'TodoInfo'}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && (<UserInfo user={todo.user} />)}\n  </article>\n);\n","import { Todo } from '../../types/index';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","/* eslint-disable @typescript-eslint/quotes */\nimport React, { FormEventHandler, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo, User } from './types/index';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState<number>(0);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [updatedTodos, setUpdatedTodos] = useState(todos);\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n    if (title && userId) {\n      const newTodo = {\n        id: Math.max(...updatedTodos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId: Number(userId),\n        user: getUser(Number(userId)),\n      };\n\n      setUpdatedTodos([...updatedTodos, newTodo]);\n      setFormSubmitted(false);\n      setTitle('');\n      setUserId(0);\n    } else {\n      setFormSubmitted(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" onSubmit={handleSubmit} method=\"POST\">\n\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {/* Title: */}\n            {`Title: `}\n            <input\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n              data-cy=\"titleInput\"\n            />\n          </label>\n\n          {(!title && formSubmitted) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:\n            {`User: `}\n            <select\n              data-cy=\"userSelect\"\n              id=\"user\"\n              name=\"user\"\n              value={String(userId)}\n              onChange={(event) => setUserId(Number(event.target.value))}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {(!userId && formSubmitted) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={updatedTodos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}